#!/bin/bash

# Check arguments
if [[ $# -eq 0 ]] ; then
    echo -e "Usage: extract_messages <path/to/src> <namespaces>

  This script extracts translations from the passed directory and generates a json file in a fake
  locale 'template', that serves the purposes of a .pot file. You will then need to run the
  \`update_catalog\` script to populate the real locales with the new translations that were found."

    exit 1
fi

if [[ $# -eq 1 ]] ; then
    echo 'You must supply the namespace in which to extract messages'
    exit 1
fi

set -e

CURRENT_DIR="$(pwd)"
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
TMP_DIRECTORY=tmp-react-translate
APP_DIR=$1
NAMESPACE=$2
PO_FILE=$TMP_DIRECTORY/extracted.po
FILENAME=locales/template/${NAMESPACE}.json

mkdir -p $TMP_DIRECTORY/
mkdir -p $CURRENT_DIR/locales/template/

node_modules/.bin/babel --presets $SCRIPT_DIR/babel-preset-gettext.json $APP_DIR  > /dev/null
node_modules/.bin/po2json $PO_FILE $FILENAME -f mf --pretty --fallback-to-msgid

echo -e "  \e[32mSuccessfully extracted messages to ${FILENAME}\e[0m"

# clean
rm -r $TMP_DIRECTORY

# merge external libs messages
$SCRIPT_DIR/merge_catalogs $NAMESPACE

# rewrite plurals
$SCRIPT_DIR/create_counterpart_plurals
set +e
